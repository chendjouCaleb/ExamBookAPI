// <auto-generated />
using System;
using ExamBook.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamBook.Migrations.ApplicationVxDb
{
    [DbContext(typeof(ApplicationVxDbContext))]
    [Migration("20230407094349_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Vx.Models.Actor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("Vx.Models.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("ActorId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DataValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Vx.Models.Publisher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Vx.Models.PublisherEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long?>("EventId")
                        .HasColumnType("bigint");

                    b.Property<string>("PublisherId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("PublisherId");

                    b.ToTable("PublisherEvents");
                });

            modelBuilder.Entity("Vx.Models.Subscription", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("PublisherId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("Vx.Models.Event", b =>
                {
                    b.HasOne("Vx.Models.Actor", "Actor")
                        .WithMany("Events")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");
                });

            modelBuilder.Entity("Vx.Models.PublisherEvent", b =>
                {
                    b.HasOne("Vx.Models.Event", "Event")
                        .WithMany("PublisherEvents")
                        .HasForeignKey("EventId");

                    b.HasOne("Vx.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Vx.Models.Subscription", b =>
                {
                    b.HasOne("Vx.Models.Publisher", "Publisher")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PublisherId");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Vx.Models.Actor", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Vx.Models.Event", b =>
                {
                    b.Navigation("PublisherEvents");
                });

            modelBuilder.Entity("Vx.Models.Publisher", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
